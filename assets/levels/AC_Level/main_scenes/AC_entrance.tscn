[gd_scene load_steps=49 format=2]

[ext_resource path="res://assets/levels/AC_Level/assets/tiles/B41_flag3.png" type="Texture" id=1]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/B41_flag1.png" type="Texture" id=2]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/B40_exterior_ac.png" type="Texture" id=3]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/B41_flag2.png" type="Texture" id=4]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/PL6a_buildings.png" type="Texture" id=5]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/PL1a_blue_sky_clouds.png" type="Texture" id=6]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/PL1b_blue_sky_clouds.png" type="Texture" id=7]
[ext_resource path="res://assets/art/rooftop_level/sprites/CH_dr_adkins/CH_dr_adkins_v2_sword_attack-sheet.png" type="Texture" id=8]
[ext_resource path="res://assets/levels/AC_Level/assets/tiles/grass.png" type="Texture" id=9]
[ext_resource path="res://assets/sounds/object_sounds/SD19_player_hurt.wav" type="AudioStream" id=10]
[ext_resource path="res://assets/sounds/object_sounds/SD13a_swordswing_player.wav" type="AudioStream" id=11]
[ext_resource path="res://assets/sounds/object_sounds/SD4_footsteps.wav" type="AudioStream" id=12]
[ext_resource path="res://assets/sounds/object_sounds/SD5a_jump_player.wav" type="AudioStream" id=13]
[ext_resource path="res://assets/gui/hud/cola_healing/assests/sprites/plus_ss.png" type="Texture" id=14]
[ext_resource path="res://assets/gui/hud/cola_healing/assests/sounds/healing_sound.wav" type="AudioStream" id=15]
[ext_resource path="res://assets/art/rooftop_level/sprites/CH_dr_adkins/CH_dr_adkins_V2_sword_idle.png" type="Texture" id=16]
[ext_resource path="res://assets/art/rooftop_level/sprites/CH_dr_adkins/CH_dr_adkins_V2_sword_move.png" type="Texture" id=17]
[ext_resource path="res://assets/art/rooftop_level/sprites/CH_dr_adkins/CH_dr_adkins_V2_sword_jump.png" type="Texture" id=18]
[ext_resource path="res://assets/gui/hud/game_UI.tscn" type="PackedScene" id=19]
[ext_resource path="res://assets/code/common_scripts/player.gd" type="Script" id=20]
[ext_resource path="res://assets/levels/AC_Level/main_scenes/AC_entrance.gd" type="Script" id=21]
[ext_resource path="res://assets/sprite_scenes/common_scenes/scene_transition.tscn" type="PackedScene" id=23]

[sub_resource type="Shader" id=1]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/speed = 1.0
shader_param/minStrength = 0.05
shader_param/maxStrength = 0.01
shader_param/strengthScale = 100.0
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = null
shader_param/heightOffset = 0.0
shader_param/offset = 0.0

[sub_resource type="Shader" id=3]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/speed = 1.0
shader_param/minStrength = 0.05
shader_param/maxStrength = 0.01
shader_param/strengthScale = 100.0
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = null
shader_param/heightOffset = null
shader_param/offset = 0.0

[sub_resource type="Shader" id=5]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = WORLD_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/speed = 1.0
shader_param/minStrength = 0.05
shader_param/maxStrength = 0.01
shader_param/strengthScale = 100.0
shader_param/interval = 3.5
shader_param/detail = 1.0
shader_param/distortion = null
shader_param/heightOffset = null
shader_param/offset = 0.0

[sub_resource type="Animation" id=7]
loop = true
step = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("sprites/idle:frame")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.75 ),
"transitions": PoolRealArray( 1, 0.999999 ),
"update": 0,
"values": [ 0, 3 ]
}

[sub_resource type="Animation" id=8]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("sprites/jump:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=9]
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("melee/CollisionShape2D:disabled")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, false, true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("sprites/melee:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 0.066986, 0.87055, 1 ),
"update": 0,
"values": [ 0, 1, 7 ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ true ],
"method": "set_is_attacking"
}, {
"args": [ false ],
"method": "set_is_attacking"
} ]
}

[sub_resource type="Animation" id=10]
length = 0.3
loop = true
step = 0.15
tracks/0/type = "value"
tracks/0/path = NodePath("sprites/walk:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 1 ]
}
tracks/1/type = "audio"
tracks/1/path = NodePath("sounds/SD4_footsteps")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 12 )
} ],
"times": PoolRealArray( 0.15 )
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "_change_footstep_pitch"
} ]
}

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 10, 29 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 34.0725, 29.1493 )

[sub_resource type="OccluderPolygon2D" id=13]
polygon = PoolVector2Array( -10.5045, -28.5032, 3.45433, -28.335, 3.53842, -9.41481, 0.258926, -5.37851, 0.258926, -3.36036, 9.59288, 0.507763, 13.2087, -0.501312, 22.3745, -18.4965, 26.0744, -19.3374, 27.0835, -16.3943, 18.0018, 1.34866, 19.3473, 3.53499, 19.5155, 4.54407, 17.8337, 4.88042, 17.4973, 7.82356, 13.8814, 9.67354, 12.1997, 11.5235, 10.5179, 10.7667, 10.5179, 8.91673, 7.82699, 7.65539, 4.21114, 7.73948, 2.27708, 5.63723, 3.03388, 13.3735, 0.847549, 13.2053, 2.69753, 27.1642, 4.46341, 29.1823, 4.46341, 31.2005, -3.44102, 31.2846, -4.61827, 29.0982, -3.77738, 27.0801, -4.78645, 19.2598, -6.72052, 17.4939, -9.66365, 19.5961, -11.2614, 26.9119, -9.57956, 29.9391, -9.57956, 31.4528, -17.6522, 31.7891, -18.4931, 29.5187, -17.484, 27.1642, -13.784, 14.1303, -15.4658, 14.3826, -18.4931, 16.7371, -20.5112, 15.3075, -19.6703, 12.028, -25.0521, 8.41219, -25.893, 4.79634, -20.6794, -1.67857, -10.3364, -3.36036, -13.9843, -8.42379, -15.7854, -12.6616, -15.7854, -24.6336 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 14 )
region = Rect2( 0, 0, 13, 13 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 14 )
region = Rect2( 13, 0, 13, 13 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 14 )
region = Rect2( 26, 0, 13, 13 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 14 )
region = Rect2( 39, 0, 13, 13 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 14 )
region = Rect2( 52, 0, 13, 13 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 14 )
region = Rect2( 65, 0, 13, 13 )

[sub_resource type="SpriteFrames" id=20]
animations = [ {
"frames": [ SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ), SubResource( 19 ) ],
"loop": true,
"name": "default",
"speed": 15.0
} ]

[sub_resource type="Animation" id=21]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("../animate_plus:root_node")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ NodePath("../green_plus") ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.11 ),
"transitions": PoolRealArray( 1, 0.189465 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ), Vector2( 3, 3 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -5, 1 ),
"update": 0,
"values": [ Vector2( -4.52695, -22.4807 ), Vector2( -4.527, -44.481 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="RectangleShape2D" id=22]
extents = Vector2( 1456, 60.5189 )

[sub_resource type="RectangleShape2D" id=23]
extents = Vector2( 131.245, 525.733 )

[sub_resource type="RectangleShape2D" id=24]
extents = Vector2( 16, 40 )

[sub_resource type="Shader" id=25]
code = "/*
	Glitch Effect Shader by Yui Kinomoto @arlez80

	MIT License
*/

shader_type canvas_item;

// 振動の強さ
uniform float shake_power = 0.03;
// 振動率
uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;
// 振動速度
uniform float shake_speed = 5.0;
// 振動ブロックサイズ
uniform float shake_block_size = 30.5;
// 色の分離率
uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;

float random( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment( )
{
	float enable_shift = float(
		random( trunc( TIME * shake_speed ) )
	<	shake_rate
	);

	vec2 fixed_uv = SCREEN_UV;
	fixed_uv.x += (
		random(
			( trunc( SCREEN_UV.y * shake_block_size ) / shake_block_size )
		+	TIME
		) - 0.5
	) * shake_power * enable_shift;

	vec4 pixel_color = textureLod( SCREEN_TEXTURE, fixed_uv, 0.0 );
	pixel_color.r = mix(
		pixel_color.r
	,	textureLod( SCREEN_TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ), 0.0 ).r
	,	enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b
	,	textureLod( SCREEN_TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ), 0.0 ).b
	,	enable_shift
	);
	COLOR = pixel_color;
}
"

[sub_resource type="ShaderMaterial" id=26]
render_priority = 3
shader = SubResource( 25 )
shader_param/shake_power = 0.075
shader_param/shake_rate = 1.0
shader_param/shake_speed = 0.2
shader_param/shake_block_size = 1.0
shader_param/shake_color_rate = 0.202

[node name="AC_entrance" type="Node2D"]
position = Vector2( 6, 0 )
script = ExtResource( 21 )

[node name="Control" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PL1a_blue_sky_clouds" type="Sprite" parent="Control"]
position = Vector2( 0, -264 )
scale = Vector2( 3.74536, 3.74536 )
texture = ExtResource( 6 )

[node name="PL1b_blue_sky_clouds" type="Sprite" parent="Control"]
position = Vector2( 64, -320 )
scale = Vector2( 0.647889, 0.647889 )
texture = ExtResource( 7 )

[node name="PL1b_blue_sky_clouds2" type="Sprite" parent="Control"]
position = Vector2( -256, -320 )
scale = Vector2( 0.647889, 0.647889 )
texture = ExtResource( 7 )

[node name="PL1b_blue_sky_clouds3" type="Sprite" parent="Control"]
position = Vector2( -568, -320 )
scale = Vector2( 0.647889, 0.647889 )
texture = ExtResource( 7 )

[node name="PL6a_buildings" type="Sprite" parent="."]
modulate = Color( 2.89, 1.16, 3.47, 1 )
position = Vector2( -232, -120.5 )
texture = ExtResource( 5 )

[node name="PL6a_buildings2" type="Sprite" parent="."]
modulate = Color( 2.89, 1.16, 3.47, 1 )
position = Vector2( 8, -120.5 )
texture = ExtResource( 5 )

[node name="PL6a_buildings3" type="Sprite" parent="."]
modulate = Color( 2.89, 1.16, 3.47, 1 )
position = Vector2( 256, -120.5 )
texture = ExtResource( 5 )

[node name="PL6a_buildings4" type="Sprite" parent="."]
modulate = Color( 2.89, 1.16, 3.47, 1 )
position = Vector2( 256, -120.5 )
texture = ExtResource( 5 )

[node name="scene_transition" parent="." instance=ExtResource( 23 )]

[node name="PL6a_buildings5" type="Sprite" parent="."]
modulate = Color( 2.89, 1.16, 3.47, 1 )
position = Vector2( -480, -120.5 )
texture = ExtResource( 5 )

[node name="Control2" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="B41_flag3" type="Sprite" parent="Control2"]
material = SubResource( 2 )
position = Vector2( -78, -96 )
texture = ExtResource( 1 )

[node name="B41_flag2" type="Sprite" parent="Control2"]
material = SubResource( 4 )
position = Vector2( -38, -80 )
scale = Vector2( 0.768613, 0.768613 )
texture = ExtResource( 4 )

[node name="B41_flag1" type="Sprite" parent="Control2"]
material = SubResource( 6 )
position = Vector2( 10, -72 )
scale = Vector2( 0.699221, 0.699221 )
texture = ExtResource( 2 )

[node name="grass" type="Sprite" parent="."]
position = Vector2( 24, -80 )
texture = ExtResource( 9 )

[node name="grass2" type="Sprite" parent="."]
position = Vector2( -360, -80 )
texture = ExtResource( 9 )

[node name="grass3" type="Sprite" parent="."]
position = Vector2( -744, -80 )
texture = ExtResource( 9 )

[node name="grass4" type="Sprite" parent="."]
position = Vector2( 408, -80 )
texture = ExtResource( 9 )

[node name="B40_exterior_ac" type="Sprite" parent="."]
position = Vector2( 456, -288 )
texture = ExtResource( 3 )

[node name="player" type="KinematicBody2D" parent="." groups=[
"player",
]]
position = Vector2( -550, -32 )
collision_layer = 2147483649
collision_mask = 10
script = ExtResource( 20 )

[node name="Camera2D" type="Camera2D" parent="player"]
position = Vector2( 304, -50.981 )
current = true
zoom = Vector2( 1.5, 1.5 )
limit_left = -596
limit_top = -418
limit_right = 377
limit_bottom = 31
smoothing_enabled = true
smoothing_speed = 3.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="player"]
anims/idle = SubResource( 7 )
anims/jump = SubResource( 8 )
anims/melee = SubResource( 9 )
anims/walk = SubResource( 10 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="player"]
visible = false
position = Vector2( -6, 2 )
shape = SubResource( 11 )

[node name="melee" type="Area2D" parent="player" groups=[
"hitbox",
"player",
]]
visible = false
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="player/melee"]
position = Vector2( 40.0971, 0 )
shape = SubResource( 12 )
disabled = true

[node name="sprites" type="Node2D" parent="player"]

[node name="idle" type="Sprite" parent="player/sprites"]
texture = ExtResource( 16 )
hframes = 4

[node name="jump" type="Sprite" parent="player/sprites"]
visible = false
texture = ExtResource( 18 )

[node name="melee" type="Sprite" parent="player/sprites"]
visible = false
texture = ExtResource( 8 )
hframes = 8

[node name="walk" type="Sprite" parent="player/sprites"]
visible = false
texture = ExtResource( 17 )
hframes = 4

[node name="game_UI" parent="player" instance=ExtResource( 19 )]
margin_left = -5.66968
margin_right = 34.3303

[node name="LightOccluder2D" type="LightOccluder2D" parent="player"]
visible = false
occluder = SubResource( 13 )

[node name="sounds" type="Node2D" parent="player"]

[node name="SD4_footsteps" type="AudioStreamPlayer" parent="player/sounds"]
stream = ExtResource( 12 )
volume_db = -5.0

[node name="SD19_player_hurt" type="AudioStreamPlayer" parent="player/sounds"]
stream = ExtResource( 10 )

[node name="SD5a_player_jump" type="AudioStreamPlayer" parent="player/sounds"]
stream = ExtResource( 13 )
volume_db = -10.0

[node name="SD13a_sword_swing" type="AudioStreamPlayer2D" parent="player/sounds"]
stream = ExtResource( 11 )
volume_db = -5.0

[node name="cola_healing" type="Control" parent="player"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="green_plus" type="AnimatedSprite" parent="player/cola_healing"]
visible = false
position = Vector2( -4.527, -44.481 )
frames = SubResource( 20 )
frame = 3
playing = true

[node name="animate_plus" type="AnimationPlayer" parent="player/cola_healing"]
root_node = NodePath("../green_plus")
anims/heal = SubResource( 21 )

[node name="healing_sound" type="AudioStreamPlayer" parent="player/cola_healing"]
stream = ExtResource( 15 )
volume_db = -8.548
pitch_scale = 0.89

[node name="StaticBody2D" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( -616, 64 )
shape = SubResource( 22 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 314.125, -91.1138 )
shape = SubResource( 23 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( -728.82, -112.377 )
shape = SubResource( 23 )

[node name="activate_door" type="Area2D" parent="."]
position = Vector2( 198.753, -32 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="activate_door"]
shape = SubResource( 24 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 26 )
margin_left = 98.0
margin_top = -312.0
margin_right = 138.0
margin_bottom = -272.0
rect_scale = Vector2( 5.24477, 0.858654 )
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="."]
material = SubResource( 26 )
margin_left = 163.579
margin_top = -200.0
margin_right = 203.579
margin_bottom = -160.0
rect_scale = Vector2( 9.29758, 1.41645 )
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect3" type="ColorRect" parent="."]
material = SubResource( 26 )
margin_left = 442.0
margin_top = -352.0
margin_right = 482.0
margin_bottom = -312.0
rect_scale = Vector2( 9.29758, 1.41645 )
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect4" type="ColorRect" parent="."]
material = SubResource( 26 )
margin_left = 184.0
margin_top = -64.0
margin_right = 224.0
margin_bottom = -24.0
rect_scale = Vector2( 1.45757, 1.41645 )
color = Color( 1, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="death" from="player" to="player" method="_on_player_death"]
[connection signal="health_changed" from="player" to="player" method="_on_player_health_changed"]
[connection signal="body_entered" from="player/melee" to="player" method="_on_melee_body_entered"]
[connection signal="cola_healing" from="player/game_UI" to="player" method="_on_game_UI_cola_healing"]
[connection signal="respawn_player" from="player/game_UI" to="player" method="_on_game_UI_respawn_player"]
[connection signal="area_entered" from="activate_door" to="." method="_on_activate_door_area_entered"]
