[gd_scene load_steps=16 format=2]

[ext_resource path="res://assets/gui/fonts/m5x7.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://assets/levels/AC_Level/assets/sprites/characters/mrsparks_ss.png" type="Texture" id=2]

[sub_resource type="AtlasTexture" id=1]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 57, 70 )

[sub_resource type="AtlasTexture" id=2]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 57, 0, 57, 70 )

[sub_resource type="AtlasTexture" id=3]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 114, 0, 57, 70 )

[sub_resource type="AtlasTexture" id=4]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 171, 0, 57, 70 )

[sub_resource type="AtlasTexture" id=5]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 0, 70, 57, 70 )

[sub_resource type="AtlasTexture" id=6]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 57, 70, 57, 70 )

[sub_resource type="AtlasTexture" id=7]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 114, 70, 57, 70 )

[sub_resource type="AtlasTexture" id=8]
flags = 2
atlas = ExtResource( 2 )
region = Rect2( 171, 70, 57, 70 )

[sub_resource type="SpriteFrames" id=9]
animations = [ {
"frames": [ SubResource( 1 ), SubResource( 2 ), SubResource( 3 ), SubResource( 4 ) ],
"loop": true,
"name": "freed",
"speed": 5.0
}, {
"frames": [ SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ) ],
"loop": true,
"name": "stuck",
"speed": 5.0
} ]

[sub_resource type="DynamicFont" id=10]
font_data = ExtResource( 1 )

[sub_resource type="Shader" id=11]
code = "shader_type canvas_item;

uniform float pixel = 1.0;
uniform vec2 red_offset = vec2(0.0, 0.0);
uniform vec2 green_offset = vec2(0.0, 0.0);
uniform vec2 blue_offset = vec2(0.0, 0.0);
uniform float alpha = 1.0;
uniform float rand_strength = 1.0;

uniform vec4 affected = vec4(0.0, 0.0, 1.0, 1.0);

float Hash21(vec2 p) {
	p = fract(p*vec2(123.34, 456.21));
	p += dot(p, p+45.32);
	
	return fract(p.x*p.y);
}

vec2 pixelize(vec2 uv) {
	float mult = 5000.0 / (pixel * pixel);
	uv.x = floor(uv.x * mult) / mult;
	uv.y = floor(uv.y * mult) / mult;
	return uv;
}

vec4 chroma(vec2 uv, sampler2D tex) {
	vec4 col = texture(tex, uv);
	if (abs(red_offset.x) + abs(red_offset.y) > 0.001) {
		col.r = texture(tex, vec2(uv.x + red_offset.x, uv.y + red_offset.y)).r;
	}
	if (abs(green_offset.x) + abs(green_offset.y) > 0.001) {
		col.g = texture(tex, vec2(uv.x + green_offset.x, uv.y + green_offset.y)).g;	
	}
	if (abs(blue_offset.x) + abs(blue_offset.y) > 0.001) {
		col.b = texture(tex, vec2(uv.x + blue_offset.x, uv.y + blue_offset.y)).b;
	}
	
	return col;
}

void fragment() {
	vec2 normal_uv = UV;
	vec4 normal_col = texture(TEXTURE, UV);
    if (normal_uv.x < affected.x || normal_uv.y < affected.y || normal_uv.x > affected.x + affected.z || normal_uv.y > affected.y + affected.a) {
		COLOR = normal_col;
	}
	else {
		vec2 uv = pixelize(UV);
		vec4 col = chroma(uv, TEXTURE);
		col.a = col.a * alpha;
		vec2 id = floor(uv * 10.0);
		float alpha_rand = Hash21(id + floor(TIME*10.0));
		col = col * ( alpha_rand + (rand_strength * (1.0-alpha_rand)) );
		COLOR = col;
	}
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/pixel = 30.0
shader_param/red_offset = Vector2( 0, 0 )
shader_param/green_offset = Vector2( 0, 0 )
shader_param/blue_offset = Vector2( 0, 0 )
shader_param/alpha = 0.015
shader_param/rand_strength = 3.0
shader_param/affected = Plane( 0, 0, 1, 1 )

[sub_resource type="Animation" id=13]
length = 3.4
tracks/0/type = "value"
tracks/0/path = NodePath("../sparks/spark_cam:zoom")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 3.2, 3.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1.5, 1.5 ), Vector2( 0.5, 0.5 ), Vector2( 0.5, 0.5 ), Vector2( 1.5, 1.5 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../sparks/force_field:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("spark_cam:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.2, 1.25, 1.3, 1.35 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1112, 192 ), Vector2( 936, 66.5101 ), Vector2( 936, 66.5101 ), Vector2( 928, 64.665 ), Vector2( 929, 67 ), Vector2( 931, 66.228 ), Vector2( 934, 66.51 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("mr_spark:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 1.8, 2, 2.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 936, 80 ), Vector2( 936, 70 ), Vector2( 936, 80 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("mr_spark:animation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "stuck", "freed" ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("mr_spark:flip_h")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 2.5, 2.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, true, false ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("mr_spark:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1.7, 1.8, 2 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 100, 100, 100, 1 ), Color( 0.282353, 0.282353, 0.282353, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("drsparks:rect_scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 2, 2.1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 0 ), Vector2( 1, 0 ), Vector2( 1, 1 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("spark_cam:current")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 3.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("../../../player/ac_camera:current")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 3.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("transition/transition_screen:color")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0, 3, 3.1, 3.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}
tracks/11/type = "value"
tracks/11/path = NodePath("../../../player/ac_camera:limit_left")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ -61 ]
}
tracks/12/type = "value"
tracks/12/path = NodePath("../../../player/ac_camera:limit_right")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 3953 ]
}
tracks/13/type = "value"
tracks/13/path = NodePath("transition/transition_screen:visible")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/keys = {
"times": PoolRealArray( 0.1, 3.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/14/type = "value"
tracks/14/path = NodePath("drsparks:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/15/type = "value"
tracks/15/path = NodePath("../../../sounds/lever_hit:playing")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/16/type = "value"
tracks/16/path = NodePath("../../../sounds/sprite_jump:playing")
tracks/16/interp = 1
tracks/16/loop_wrap = true
tracks/16/imported = false
tracks/16/enabled = true
tracks/16/keys = {
"times": PoolRealArray( 1.9 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/17/type = "value"
tracks/17/path = NodePath("../../../player/ac_camera:zoom")
tracks/17/interp = 1
tracks/17/loop_wrap = true
tracks/17/imported = false
tracks/17/enabled = true
tracks/17/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 0,
"values": [  ]
}
tracks/18/type = "method"
tracks/18/path = NodePath("../../..")
tracks/18/interp = 1
tracks/18/loop_wrap = true
tracks/18/imported = false
tracks/18/enabled = true
tracks/18/keys = {
"times": PoolRealArray( 0, 3.4 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "_on_game_lock"
}, {
"args": [  ],
"method": "_on_game_unlock"
} ]
}

[node name="sparks2" type="Node2D"]

[node name="transition" type="Node2D" parent="."]
z_index = 13

[node name="transition_screen" type="ColorRect" parent="transition"]
visible = false
margin_left = 400.0
margin_top = -112.0
margin_right = 440.0
margin_bottom = -72.0
rect_scale = Vector2( 31.1073, 14.5943 )
color = Color( 0, 0, 0, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="mr_spark" type="AnimatedSprite" parent="."]
position = Vector2( 936, 80 )
frames = SubResource( 9 )
animation = "stuck"
frame = 1
playing = true

[node name="drsparks" type="Label" parent="."]
margin_left = 912.259
margin_top = 35.2281
margin_right = 991.259
margin_bottom = 49.2281
rect_scale = Vector2( 1, 1e-05 )
custom_fonts/font = SubResource( 10 )
text = "Dr. Sparks"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="force_field" type="ColorRect" parent="."]
material = SubResource( 12 )
margin_left = 885.829
margin_top = 11.6539
margin_right = 925.829
margin_bottom = 51.6539
rect_scale = Vector2( 2.76054, 2.58927 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="spark_cam" type="Camera2D" parent="."]
position = Vector2( 1112, 192 )
rotation = 3.14159
scale = Vector2( 0.467244, 0.221858 )
current = true
zoom = Vector2( 1.5, 1.5 )

[node name="sparks_animation" type="AnimationPlayer" parent="."]
anims/zoom_in = SubResource( 13 )
